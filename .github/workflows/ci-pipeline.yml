name: Deploy and Run .NET App Without Systemd

on:
  push:
    branches:
      - master  # Adjust this based on your branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Publish .NET Application
      run: |
        dotnet publish -c Release -o ./publish

    - name: Copy Published Files to Server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_IP }}  # Server IP from secrets
        username: ${{ secrets.SERVER_USER }}  # Username from secrets
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH Private Key from secrets
        source: ./publish/*
        target: /home/${{ secrets.SERVER_USER }}/Downloads/testpublish
        port: 22

    - name: Run .NET Application on Remote Server
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/${{ secrets.SERVER_USER }}/Downloads/testpublish
          
          # Kill any existing process on port 5000
          if [ -f dotnet_app.pid ]; then
            kill $(cat dotnet_app.pid) 2>/dev/null || true
            rm -f dotnet_app.pid
          fi
          fuser -k 5000/tcp 2>/dev/null || true
          
          # Start the .NET application in the background
          nohup dotnet DailyPulse.WebAPI.dll --urls "http://192.168.121.17:5000" > output.log 2>&1 &
          echo $! > dotnet_app.pid
          
          # Wait a moment and check if the process is running
          sleep 5
          if [ -f dotnet_app.pid ] && ps -p $(cat dotnet_app.pid) > /dev/null; then
            echo "Application started successfully"
          else
            echo "Failed to start application"
            exit 1
          fi
        EOF 